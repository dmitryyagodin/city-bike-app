name: city-bikes-cloudrun

on:
  push:
    branches: [next-cache]
env:
  PROJECT_ID: ${{secrets.CLOUD_RUN_PROJECT_NAME}}
  REGION: europe-north1
  REPO_NAME: city-bikes-cloudrun
  DATABASE_URL_ARG: ${{secrets.DATABASE_URL}}
jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # authenticate with GCP
      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{secrets.CLOUD_RUN_SERVICE_ACCOUNT}}"
      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      
      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: 
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
      - name: Build and tag the docker image       
        run: |-
          docker build --build-arg DATABASE_URL=$DATABASE_URL_ARG -t gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA -f ./docker/app-prod.Dockerfile .
      
